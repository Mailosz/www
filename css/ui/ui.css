html {
    /* --weak-accent-color: #8af;
    --accent-color: #68f;
    --strong-accent-color: #349; */
    --weak-accent-color: #afa;
    --accent-color: #3f3;
    --strong-accent-color: green;
    --text-color: black;

    --border-color: #666;
    --button-background: #eee;
    --border-width: 2px;
    --border-radius: 4px;
}

:focus-visible {
    outline-offset: 2px;
    outline-width: 2px;
    outline-color: invert;
    outline-style: dashed;
}

/* BUTTONS */

.button, button, input[type=button], input[type=submit], input[type=reset] {
    display: inline-block;
    background-color: var(--button-background);
    border: var(--border-width) solid var(--border-color);
    border-radius: var(--border-radius);
    padding: 0.25em 0.5em;
    cursor: pointer;
    text-decoration: none;
    color: var(--text-color, black);
}

    .button:hover, button:hover, input[type=button]:hover, input[type=submit]:hover, input[type=reset]:hover {
        filter: brightness(1.1);
    }

    .button:active, button:active, input[type=button]:active, input[type=submit]:active, input[type=reset]:active {
        filter: brightness(0.9);
    }

    .button[disabled], button[disabled], input[type=button][disabled], input[type=submit][disabled], input[type=reset][disabled] {
        filter: saturate(0.5) brightness(1.5) contrast(0.7);
        cursor: inherit;
    }

    .button:state(checked) {
        border: var(--border-width, 2px) solid var(--strong-accent-color, green);
        background-color: var(--weak-accent-color, #afa);
    }

/* arranges buttons in a single toolbar */
.toolbar {
    display: inline-flex;
    justify-content: start;
    align-items: stretch;
    gap: 0;
}

    .toolbar>:is(ox-button):not(:first-child) {
        border-left: none;
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
    }

    .toolbar>:is(ox-button):not(:last-child) {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
    }

/* INPUTS */

input {
    accent-color: var(--accent-color, inherit);
}

input:indeterminate {
    accent-color: gray;
}


/* WAIT-RING */
@keyframes spinning {
    0% {transform: rotate(0deg);}
    100% {transform: rotate(360deg);}
}

.wait-ring {
    position: relative;
    transition: transform, display allow-discrete;
    transition-duration: 0.5s;
    transform: scale(1);
    transform-origin: center;
    transition-timing-function: cubic-bezier(0.5, 2, 0.65, 0.8);
    background-image: radial-gradient(circle closest-side  at 50% 52%, transparent 0, transparent 55%, rgba(127,127,127,0.5) 65%,rgba(127,127,127,0.5) 85%, transparent 95%);
    width: 100px;
    height: 100px;
    cursor: wait;
    resize: both;

    @starting-style {
        transform: scale(0);
    }

}

.wait-ring.hidden {
    display: none;
    transform: scale(0);
}

.wait-ring::before {
    display: block;
    content: ' ';
    position: absolute;
    left: 8%;
    top: 8%;
    right: 8%;
    bottom: 8%;

    aspect-ratio: 1 / 1;
    border-radius: 100%;
    background: conic-gradient(rgba(255,255,255, 0.5) 0%, rgba(255,255,255, 0.5) 10%, rgba(from var(--accent-color) r g b / 1) 100%);
    background-size: 120%;
    background-position: center;
    background-repeat: no-repeat;
    mask-image: radial-gradient(circle at center, transparent 0, transparent 50%, #000 50%);


    filter: blur(4px);
    animation: spinning 2s linear infinite;
    backdrop-filter: brightness(1);
}
